version: "3.8"

services:
  backend1:
    build:
      context: ./backend1
    container_name: backend1
    env_file:
      - ./backend1/.env
    ports:
      - "${BACKEND1_PORT:-5434}:5434"
    networks:
      - aryan-network
    depends_on:
      postgres:
        condition: service_healthy
    secrets:
      - clerk_secret_key
    restart: always
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 500M
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5434/health || exit 1"]
      interval: 60s
      timeout: 15s
      retries: 10
      start_period: 60s

  backend2:
    build:
      context: ./backend2
    container_name: backend2
    env_file:
      - ./backend2/.env
    ports:
      - "${BACKEND2_PORT:-5435}:5435"
    networks:
      - aryan-network
    depends_on:
      postgres:
        condition: service_healthy
    secrets:
      - clerk_secret_key
    restart: always
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 500M
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5435/health || exit 1"]
      interval: 60s
      timeout: 15s
      retries: 10
      start_period: 60s

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    env_file:
      - ./frontend/.env
    ports:
      - "${FRONTEND_PORT:-5173}:5173"
    networks:
      - aryan-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5173 || exit 1"]
      interval: 60s
      timeout: 15s
      retries: 10
      start_period: 60s

  postgres:
    image: postgres:alpine
    container_name: postgres
    environment:
      POSTGRES_USER: fellowship
      POSTGRES_PASSWORD: fellowship
      POSTGRES_DB: fellowship
    ports:
      - "5432:5432"
    networks:
      - aryan-network
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fellowship"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  aryan-network:
    driver: bridge

volumes:
  pgdata:

secrets:
  clerk_secret_key:
    file: ./secrets/clerk_secret_key.txt
